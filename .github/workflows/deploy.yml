name: Node.js CI/CD Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  APP_DIR: "/home/ubuntu/apps/backend/backend"  # Full absolute path
  PM2_APP_NAME: "backend-app"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test --if-present || echo "No tests found"

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Test connection
        run: |
          ping -c 4 13.51.235.118
          nc -zv 13.51.235.118 22
      
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}
      
      - name: Test SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no -vvv ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo 'SSH test successful'"
      
      - name: Deploy to Server
        timeout-minutes: 5
        run: |
          ssh -o ConnectTimeout=10 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cd ${{ env.APP_DIR }} && \
            git fetch && \
            git reset --hard origin/main && \
            npm ci --omit=dev && \
            pm2 restart ${{ env.PM2_APP_NAME }} || \
            (pm2 start npm --name '${{ env.PM2_APP_NAME }}' -- start && pm2 save)
          "
          
      
      - name: Copy .env
        timeout-minutes: 2
        run: |
          scp -o ConnectTimeout=10 .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ env.APP_DIR }}/.env
      
      - name: Verify Deployment
        run: |
          ssh -o ConnectTimeout=10 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            pm2 list && \
            echo -e '\nLatest commit:' && \
            cd ${{ env.APP_DIR }} && git log -1 --pretty=format:'%h - %s (%an, %ar)' && \
            echo -e '\nEnvironment:' && \
            ls -la .env && \
            echo -e '\nRunning processes:' && \
            ps aux | grep node
          "